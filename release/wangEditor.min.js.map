{"version":3,"sources":["wangEditor.js"],"names":["global","factory","exports","module","define","amd","wangEditor","this","createElemByHTML","html","div","document","createElement","innerHTML","children","isDOMList","selector","HTMLCollection","NodeList","querySelectorAll","result","DomElement","nodeType","selectorResult","Array","replace","trim","indexOf","length","i","$","objForEach","obj","fn","key","hasOwnProperty","call","arrForEach","fakeArr","item","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","transUnitToPx","val","test","unit","str","v","u","parseFloat","round","filterWord","transUnit","m","width","match","height","src","e","name","marks","a","b","c","tag","tmp","style","n","s","split","value","parts","toLowerCase","join","Bold","editor","$elem","type","_active","DropList","menu","opt","_this","$container","$title","titleHtml","replaceLang","addClass","append","list","onClick","_emptyFn","$list","forEach","elemHtml","$li","on","hideTimeoutId","setTimeout","hide","_rendered","_show","Head","droplist","_command","FontSize","FontName","config","fontNames","map","fontName","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","colors","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","SoundCode","Menus","menus","getPasteText","clipboardData","originalEvent","pasteText","window","getData","getPasteHtml","filterStyle","ignoreImg","pasteHtml","getPasteImgs","items","push","getAsFile","getChildrenJSON","childNodes","curElem","elemResult","textContent","nodeName","attrData","attrList","attributes","attrListLength","attr","attrs","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$textContainerElem","$bar","UploadImg","Editor","toolbarSelector","textSelector","Error","id","editorId","customConfig","eventList","prototype","constructor","elem","clone","deep","cloneList","cloneNode","get","index","first","last","types","addEventListener","target","matches","off","removeEventListener","getAttribute","setAttribute","className","arr","filter","removeClass","css","currentStyle","styleArr","resultArr","show","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","find","text","focus","parentUntil","_currentElem","results","equal","insertBefore","$referenceNode","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","emotions","title","content","alt","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","files","success","fail","error","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","isIE","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","langArgs","reg","clearTimeout","$menuELem","menuHeight","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","$body","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","checkResult","alert","$selectionELem","$parent","$targetELem","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$tbody","$trs","trLength","tr","locationData","trData","$currentTr","tdData","newTr","tdIndex","$currentTd","$table","textValId","width30","width50","width100","delBtn","tabsConfig","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","$file","fileElem","click","fileList","$linkUrl","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","$soundCodeElem","htmlEditFlag","display","editorContent","txt","editorValue","_menusControl","disable","Object","keys","menuItem","MenuConstructors","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","soundCode","init","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","pHandle","codeHandle","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","keyCode","txtHtml","canDo","now","Date","flag","pasteTime","resetTime","ex","pasteFiles","img","dataTransfer","_useStyleWithCSS","execCommand","_name","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","Symbol","iterator","_alert","alertInfo","debugInfo","customAlert","onload","callback","onerror","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","data","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","_initConfig","assign","langConfig","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","create","_offAllEvent","varArgs","TypeError","to","arguments","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ownerDocument","getElementsByTagName"],"mappings":"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","file":"wangEditor.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    poly-fill\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 记录所有的事件绑定\nvar eventList = [];\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector];\n    } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n        // DOM List 或者数组\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // clone\n    clone: function clone(deep) {\n        var cloneList = [];\n        this.forEach(function (elem) {\n            cloneList.push(elem.cloneNode(!!deep));\n        });\n        return $(cloneList);\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                // 记录下，方便后面解绑\n                eventList.push({\n                    elem: elem,\n                    type: type,\n                    fn: fn\n                });\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                });\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.childNodes);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n\n    // new 一个对象\n};function $(selector) {\n    return new DomElement(selector);\n}\n\n// 解绑所有事件，用于销毁编辑器\n$.offAll = function () {\n    eventList.forEach(function (item) {\n        var elem = item.elem;\n        var type = item.type;\n        var fn = item.fn;\n        // 解绑\n        elem.removeEventListener(type, fn);\n    });\n};\n\n/*\n    配置信息\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 表情\n    emotions: [{\n        // tab 的标题\n        title: '默认',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            alt: '[坏笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n        }, {\n            alt: '[舔屏]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n        }, {\n            alt: '[污]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n        }]\n    }, {\n        // tab 的标题\n        title: '新浪',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n            alt: '[草泥马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n            alt: '[神马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n            alt: '[浮云]'\n        }]\n    }, {\n        // tab 的标题\n        title: 'emoji',\n        // type -> 'emoji' / 'image'\n        type: 'emoji',\n        // content -> 数组\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n        // src 即图片的地址\n        return true; // 返回 true 即表示成功\n        // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        return content;\n    },\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {\n        // console.log(url)  // url 即插入图片的地址\n    },\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n\n            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n            // return {\n            //     prevent: true,\n            //     msg: '放弃上传'\n            // }\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    },\n\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n\n    // 上传图片自定义提示方法\n    // customAlert: function (info) {\n    //     // 自定义上传提示\n    // },\n\n    // // 自定义上传图片\n    // customUploadImg: function (files, insert) {\n    //     // files 是 input 中选中的文件列表\n    //     // insert 是获取图片 url 后，插入到编辑器的方法\n    //     insert(imgUrl)\n    // }\n};\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n\n    // 遍历对象\n};function objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n}\n\n// 返回百分比的格式\n\n\n// 判断是不是 function\nfunction isFunction(fn) {\n    return typeof fn === 'function';\n}\n\n/**\n * 把cm／pt为单位的值转换为px为单位的值\n * @method transUnitToPx\n * @param { String } 待转换的带单位的字符串\n * @return { String } 转换为px为计量单位的值的字符串\n * @example\n * ```javascript\n *\n * //output: 500px\n * console.log( UE.utils.transUnitToPx( '20cm' ) );\n *\n * //output: 27px\n * console.log( UE.utils.transUnitToPx( '20pt' ) );\n *\n * ```\n */\nfunction transUnitToPx(val) {\n    if (!/(pt|cm)/.test(val)) {\n        return val;\n    }\n    var unit;\n    val.replace(/([\\d.]+)(\\w+)/, function (str, v, u) {\n        val = v;\n        unit = u;\n    });\n    switch (unit) {\n        case 'cm':\n            val = parseFloat(val) * 25;\n            break;\n        case 'pt':\n            val = Math.round(parseFloat(val) * 96 / 72);\n    }\n    return val + (val ? 'px' : '');\n}\n\n// 过滤word冗余代码及无用属性\nfunction filterWord(html) {\n    //是否是word过来的内容\n    function isWordDocument(str) {\n        return (/(class=\"?Mso|style=\"[^\"]*\\bmso\\-|w:WordDocument|<(v|o):|lang=)/ig.test(str)\n        );\n    }\n    //去掉小数\n    function transUnit(v) {\n        v = v.replace(/[\\d.]+\\w+/g, function (m) {\n            return transUnitToPx(m);\n        });\n        return v;\n    }\n\n    function filterPasteWord(str) {\n        return str.replace(/[\\t\\r\\n]+/g, ' ').replace(/<!--[\\s\\S]*?-->/ig, '')\n        //转换图片\n        .replace(/<v:shape [^>]*>[\\s\\S]*?.<\\/v:shape>/gi, function (str) {\n            //opera能自己解析出image所这里直接返回空\n            // if(browser.opera){\n            //     return ''\n            // }\n            try {\n                //有可能是bitmap占为图，无用，直接过滤掉，主要体现在粘贴excel表格中\n                if (/Bitmap/i.test(str)) {\n                    return '';\n                }\n                var width = str.match(/width:([ \\d.]*p[tx])/i)[1],\n                    height = str.match(/height:([ \\d.]*p[tx])/i)[1],\n                    src = str.match(/src=\\s*\"([^\"]*)\"/i)[1];\n                return '<img width=\"' + transUnit(width) + '\" height=\"' + transUnit(height) + '\" src=\"' + src + '\" />';\n            } catch (e) {\n                return '';\n            }\n        })\n        //针对wps添加的多余标签处理\n        .replace(/<\\/?div[^>]*>/g, '')\n        //去掉多余的属性\n        .replace(/v:\\w+=([\"']?)[^'\"]+\\1/g, '').replace(/<(!|script[^>]*>.*?<\\/script(?=[>\\s])|\\/?(\\?xml(:\\w+)?|xml|meta|link|style|\\w+:\\w+)(?=[\\s\\/>]))[^>]*>/gi, '').replace(/<p [^>]*class=\"?MsoHeading\"?[^>]*>(.*?)<\\/p>/gi, '<p><strong>$1</strong></p>')\n        //去掉多余的属性\n        .replace(/\\s+(class|lang|align)\\s*=\\s*(['\"]?)([\\w-]+)\\2/ig, function (str, name, marks, val) {\n            //保留list的标示\n            return name == 'class' && val == 'MsoListParagraph' ? str : '';\n        })\n        //清除多余的font/span不能匹配&nbsp;有可能是空格\n        .replace(/<(font|span)[^>]*>(\\s*)<\\/\\1>/gi, function (a, b, c) {\n            return c.replace(/[\\t\\r\\n ]+/g, ' ');\n        })\n        //处理style的问题\n        .replace(/(<[a-z][^>]*)\\sstyle=([\"'])([^\\2]*?)\\2/gi, function (str, tag, tmp, style) {\n            var n = [],\n                s = style.replace(/^\\s+|\\s+$/, '').replace(/&#39;/g, '\\'').replace(/&quot;/gi, \"'\").replace(/[\\d.]+(cm|pt)/g, function (str) {\n                return transUnitToPx(str);\n            }).split(/;\\s*/g);\n\n            for (var i = 0, v; v = s[i]; i++) {\n\n                var name,\n                    value,\n                    parts = v.split(\":\");\n\n                if (parts.length == 2) {\n                    name = parts[0].toLowerCase();\n                    value = parts[1].toLowerCase();\n                    if (/^(background)\\w*/.test(name) && value.replace(/(initial|\\s)/g, '').length == 0 || /^(margin)\\w*/.test(name) && /^0\\w+$/.test(value)) {\n                        continue;\n                    }\n\n                    switch (name) {\n                        case \"mso-padding-alt\":\n                        case \"mso-padding-top-alt\":\n                        case \"mso-padding-right-alt\":\n                        case \"mso-padding-bottom-alt\":\n                        case \"mso-padding-left-alt\":\n                        case \"mso-margin-alt\":\n                        case \"mso-margin-top-alt\":\n                        case \"mso-margin-right-alt\":\n                        case \"mso-margin-bottom-alt\":\n                        case \"mso-margin-left-alt\":\n                        case \"mso-height\":\n                        case \"mso-width\":\n                        case \"mso-vertical-align-alt\":\n                            //trace:1819 ff下会解析出padding在table上\n                            if (!/<table/.test(tag)) n[i] = name.replace(/^mso-|-alt$/g, \"\") + \":\" + transUnit(value);\n                            continue;\n                        case \"horiz-align\":\n                            n[i] = \"text-align:\" + value;\n                            continue;\n\n                        case \"vert-align\":\n                            n[i] = \"vertical-align:\" + value;\n                            continue;\n\n                        case \"font-color\":\n                        case \"mso-foreground\":\n                            n[i] = \"color:\" + value;\n                            continue;\n\n                        case \"mso-background\":\n                        case \"mso-highlight\":\n                            n[i] = \"background:\" + value;\n                            continue;\n\n                        case \"mso-default-height\":\n                            n[i] = \"min-height:\" + transUnit(value);\n                            continue;\n\n                        case \"mso-default-width\":\n                            n[i] = \"min-width:\" + transUnit(value);\n                            continue;\n\n                        case \"mso-padding-between-alt\":\n                            n[i] = \"border-collapse:separate;border-spacing:\" + transUnit(value);\n                            continue;\n\n                        case \"text-line-through\":\n                            if (value == \"single\" || value == \"double\") {\n                                n[i] = \"text-decoration:line-through\";\n                            }\n                            continue;\n                        case \"mso-zero-height\":\n                            if (value == \"yes\") {\n                                n[i] = \"display:none\";\n                            }\n                            continue;\n                        //                                case 'background':\n                        //                                    break;\n                        case 'margin':\n                            if (!/[1-9]/.test(value)) {\n                                continue;\n                            }\n\n                    }\n\n                    if (/^(mso|column|font-emph|lang|layout|line-break|list-image|nav|panose|punct|row|ruby|sep|size|src|tab-|table-border|text-(?:decor|trans)|top-bar|version|vnd|word-break)/.test(name) || /text\\-indent|padding|margin/.test(name) && /\\-[\\d.]+/.test(value)) {\n                        continue;\n                    }\n\n                    n[i] = name + \":\" + parts[1];\n                }\n            }\n            return tag + (n.length ? ' style=\"' + n.join(';').replace(/;{2,}/g, ';') + '\"' : '');\n        });\n    }\n    return isWordDocument(html) ? filterPasteWord(html) : html;\n}\n\n/*\n    bold-menu\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    替换多语言\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $li.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\n    menu - header\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if (editor.$textElem.equal($selectionElem)) {\n            // 不能选中多行来设置标题，否则会出现问题\n            // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n            return;\n        }\n\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - fontSize\n*/\n\n// 构造函数\nfunction FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 160,\n        $title: $('<p>字号</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span style=\"font-size: x-small;\">x-small</span>'), value: '1' }, { $elem: $('<span style=\"font-size: small;\">small</span>'), value: '2' }, { $elem: $('<span>normal</span>'), value: '3' }, { $elem: $('<span style=\"font-size: large;\">large</span>'), value: '4' }, { $elem: $('<span style=\"font-size: x-large;\">x-large</span>'), value: '5' }, { $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'), value: '6' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontSize 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontSize.prototype = {\n    constructor: FontSize,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontSize', value);\n    }\n};\n\n/*\n    menu - fontName\n*/\n\n// 构造函数\nfunction FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 获取配置的字体\n    var config = editor.config;\n    var fontNames = config.fontNames || [];\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>字体</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: fontNames.map(function (fontName) {\n            return { $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'), value: fontName };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontName 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontName.prototype = {\n    constructor: FontName,\n\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontName', value);\n    }\n};\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\n    menu - link\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // tab end\n            }] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n        if (checkResult === true) {\n            editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    italic-menu\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    redo-menu\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\n    strikeThrough-menu\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    underline-menu\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    undo-menu\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\n    menu - list\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - justify\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\n    menu - Forecolor\n*/\n// 构造函数\nfunction ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor.prototype = {\n    constructor: ForeColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\n    menu - BackColor\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\n    menu - quote\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionElem.getNodeName();\n\n        if (!UA.isIE()) {\n            if (nodeName === 'BLOCKQUOTE') {\n                // 撤销 quote\n                editor.cmd.do('formatBlock', '<P>');\n            } else {\n                // 转换为 quote\n                editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n            }\n            return;\n        }\n\n        // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n        var content = void 0,\n            $targetELem = void 0;\n        if (nodeName === 'P') {\n            // 将 P 转换为 quote\n            content = $selectionElem.text();\n            $targetELem = $('<blockquote>' + content + '</blockquote>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n            return;\n        }\n        if (nodeName === 'BLOCKQUOTE') {\n            // 撤销 quote\n            content = $selectionElem.text();\n            $targetELem = $('<p>' + content + '</p>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n        }\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // first tab end\n            }] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p class=\"p\"><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - emoticon\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config;\n        // 获取表情配置\n        var emotions = config.emotions || [];\n\n        // 创建表情 dropPanel 的配置\n        var tabConfig = [];\n        emotions.forEach(function (emotData) {\n            var emotType = emotData.type;\n            var content = emotData.content || [];\n\n            // 这一组表情最终拼接出来的 html\n            var faceHtml = '';\n\n            // emoji 表情\n            if (emotType === 'emoji') {\n                content.forEach(function (item) {\n                    if (item) {\n                        faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n                    }\n                });\n            }\n            // 图片表情\n            if (emotType === 'image') {\n                content.forEach(function (item) {\n                    var src = item.src;\n                    var alt = item.alt;\n                    if (src) {\n                        // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                        faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n                    }\n                });\n            }\n\n            tabConfig.push({\n                title: emotData.title,\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        var $target = $(target);\n                        var nodeName = $target.getNodeName();\n\n                        var insertHtml = void 0;\n                        if (nodeName === 'IMG') {\n                            // 插入图片\n                            insertHtml = $target.parent().html();\n                        } else {\n                            // 插入 emoji\n                            insertHtml = '<span>' + $target.html() + '</span>';\n                        }\n\n                        _this._insert(insertHtml);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            });\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: tabConfig\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', emotHtml);\n    }\n};\n\n/*\n    menu - table\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // first tab end\n            }] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - video\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // first tab end\n            }] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\n    menu - img\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n        if (config.qiniu) {\n            return;\n        }\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }] // second tab end\n        }]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction SoundCode(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            \\u6E90\\u7801\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nSoundCode.prototype = {\n    constructor: SoundCode,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var $soundCodeElem = editor.$soundCodeElem; // 获取源码编辑器\n        var htmlEditFlag = $soundCodeElem[0].style.display; // 记录编辑器是否处于编辑状态\n        var editorContent = editor.txt.html(); // 获取文本源码\n        var editorValue = $soundCodeElem[0].value; // 获取源码容器内源码value(string)\n        if (htmlEditFlag === 'none') {\n            $soundCodeElem[0].value = editorContent;\n            $soundCodeElem.css('display', 'block');\n            $textElem.css('display', 'none');\n            this._menusControl(false);\n        } else {\n            editor.txt.html(editorValue);\n            $soundCodeElem.css('display', 'none');\n            $textElem.css('display', 'block');\n            this._menusControl(true);\n        }\n    },\n\n    _menusControl: function _menusControl(disable) {\n        // 控制menu显隐\n        var editor = this.editor;\n        var menus = editor.menus.menus;\n\n        Object.keys(menus).map(function (item) {\n            var menuItem = menus[item].$elem;\n            item !== 'soundCode' && menuItem.css('visibility', !disable ? 'hidden' : 'visible');\n        });\n    }\n};\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.fontSize = FontSize;\n\nMenuConstructors.fontName = FontName;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = ForeColor;\n\nMenuConstructors.backColor = BackColor;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\nMenuConstructors.soundCode = SoundCode;\n\n/*\n    菜单集合\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\n    粘贴信息的处理\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p class=\"p\">' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    pasteHtml = filterWord(pasteHtml);\n    // const docSplitHtml = pasteHtml.split('</html>')\n    // if (docSplitHtml.length === 2) {\n    //     pasteHtml = docSplitHtml[0]\n    // }\n\n    // // 过滤无用标签\n    // pasteHtml = pasteHtml.replace(/<(meta|script|link|style).+?>/igm, '')\n    // pasteHtml = pasteHtml.replace(/<style>[\\w\\W\\r\\n]*?<\\/style>/gmi, '')\n    // pasteHtml = pasteHtml.replace(/<w:sdtpr[\\w\\W\\r\\n]*?<\\/w:sdtpr>/gmi, '')\n    // pasteHtml = pasteHtml.replace(/<o:p>[\\w\\W\\r\\n]*?<\\/o:p>/gmi, '')\n    // // 去掉注释\n    // pasteHtml = pasteHtml.replace(/<!--[\\w\\W\\r\\n]*?-->/gmi, '')\n    // // 过滤 data-xxx 属性\n    // pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '')\n\n    // if (ignoreImg) {\n    //     // 忽略图片\n    //     pasteHtml = pasteHtml.replace(/<img.+?>/igm, '')\n    // }\n\n    // if (filterStyle) {\n    //     // 过滤样式\n    //     pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '')\n    // } else {\n    //     // 保留样式\n    //     pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '')\n    // }\n    // 为p标签添加class\n    pasteHtml = pasteHtml.replace(/<p>/g, '<p class=\"p\">');\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\n    编辑区域\n*/\n\n// 获取一个 elem.childNodes 的 JSON 数据\nfunction getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n    $children.forEach(function (curElem) {\n        var elemResult = void 0;\n        var nodeType = curElem.nodeType;\n\n        // 文本节点\n        if (nodeType === 3) {\n            elemResult = curElem.textContent;\n            elemResult = replaceHtmlSymbol(elemResult);\n        }\n\n        // 普通 DOM 节点\n        if (nodeType === 1) {\n            elemResult = {};\n\n            // tag\n            elemResult.tag = curElem.nodeName.toLowerCase();\n            // attr\n            var attrData = [];\n            var attrList = curElem.attributes || {};\n            var attrListLength = attrList.length || 0;\n            for (var i = 0; i < attrListLength; i++) {\n                var attr = attrList[i];\n                attrData.push({\n                    name: attr.name,\n                    value: attr.value\n                });\n            }\n            elemResult.attrs = attrData;\n            // children（递归）\n            elemResult.children = getChildrenJSON($(curElem));\n        }\n\n        result.push(elemResult);\n    });\n    return result;\n}\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p class=\"p\"><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var html = void 0;\n        if (val == null) {\n            html = $textElem.html();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            html = html.replace(/\\u200b/gm, '');\n            return html;\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 JSON\n    getJSON: function getJSON() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        return getChildrenJSON($textElem);\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var text = void 0;\n        if (val == null) {\n            text = $textElem.text();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            text = text.replace(/\\u200b/gm, '');\n            return text;\n        } else {\n            $textElem.text('<p class=\"p\">' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n\n        // 拖拽事件\n        this._dragHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        function insertEmptyP($selectionElem) {\n            var $p = $('<p class=\"p\"><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n\n            if ($parentElem.html() === '<code><br></code>') {\n                // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n                // 而且继续回车跳不出去，因此只能特殊处理\n                insertEmptyP($selectionElem);\n                return;\n            }\n\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            insertEmptyP($selectionElem);\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n            if (editor._willBreakCode === true) {\n                // 此时可以跳出代码块\n                // 插入 <p> ，并将选取定位到 <p>\n                var $p = $('<p class=\"p\"><br></p>');\n                $p.insertAfter($parentElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n\n                // 修改状态\n                editor._willBreakCode = false;\n\n                e.preventDefault();\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n\n            // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            var codeLength = $selectionElem.html().length;\n            if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                // 说明光标在代码最后的位置，执行了回车操作\n                // 记录下来，以便下次回车时候跳出 code\n                editor._willBreakCode = true;\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                // 取消即将跳转代码块的记录\n                editor._willBreakCode = false;\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p class=\"p\"><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p class=\"p\"><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var config = editor.config;\n        var pasteFilterStyle = config.pasteFilterStyle;\n        var pasteTextHandle = config.pasteTextHandle;\n        var ignoreImg = config.pasteIgnoreImg;\n        var $textElem = editor.$textElem;\n\n        // 粘贴图片、文本的事件，每次只能执行一个\n        // 判断该次粘贴事件是否可以执行\n        var pasteTime = 0;\n        function canDo() {\n            var now = Date.now();\n            var flag = false;\n            if (now - pasteTime >= 100) {\n                // 间隔大于 100 ms ，可以执行\n                flag = true;\n            }\n            pasteTime = now;\n            return flag;\n        }\n        function resetTime() {\n            pasteTime = 0;\n        }\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                // 阻止默认行为，使用 execCommand 的粘贴命令\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中只能粘贴纯文本\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p class=\"p\">' + pasteText + '</p>');\n                return;\n            }\n\n            // 先放开注释，有问题再追查 ————\n            // // 表格中忽略，可能会出现异常问题\n            // if (nodeName === 'TD' || nodeName === 'TH') {\n            //     return\n            // }\n\n            if (!pasteHtml) {\n                // 没有内容，可继续执行下面的图片粘贴\n                resetTime();\n                return;\n            }\n            try {\n                // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                // 因此执行 insertHTML 会报错\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n                }\n                editor.cmd.do('insertHTML', pasteHtml);\n            } catch (ex) {\n                // 此时使用 pasteText 来兼容一下\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p class=\"p\">' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            if ($img.attr('data-w-e') === '1') {\n                // 是表情图片，忽略\n                return;\n            }\n\n            // 记录当前点击过的图片\n            editor._selectedImg = $img;\n\n            // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n            editor.selection.createRangeByElem($img);\n            editor.selection.restoreSelection();\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 删除记录\n            editor._selectedImg = null;\n        });\n    },\n\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n        var editor = this.editor;\n\n        // 禁用 document 拖拽事件\n        var $document = $(document);\n        $document.on('dragleave drop dragenter dragover', function (e) {\n            e.preventDefault();\n        });\n\n        // 添加编辑区域拖拽事件\n        var $textElem = editor.$textElem;\n        $textElem.on('drop', function (e) {\n            e.preventDefault();\n            var files = e.dataTransfer && e.dataTransfer.files;\n            if (!files || !files.length) {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(files);\n        });\n    }\n};\n\n/*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 使用 styleWithCSS\n        if (!editor._useStyleWithCSS) {\n            document.execCommand('styleWithCSS', null, true);\n            editor._useStyleWithCSS = true;\n        }\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\n    selection range API\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n\n        // 判断选区内容是否在不可编辑区域之内\n        if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n            return;\n        }\n\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\n    上传进度条\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\n    上传图片\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n\n        // 校验格式\n        var linkImgCheck = config.linkImgCheck;\n        var checkResult = void 0;\n        if (linkImgCheck && typeof linkImgCheck === 'function') {\n            checkResult = linkImgCheck(link);\n            if (typeof checkResult === 'string') {\n                // 校验失败，提示信息\n                alert(checkResult);\n                return;\n            }\n        }\n\n        editor.cmd.do('insertHTML', '<div class=\"img\"><img src=\"' + link + '\" style=\"max-width:100%;\"/></div>');\n\n        // 验证图片 url 是否有效，无效的话给出提示\n        var img = document.createElement('img');\n        img.onload = function () {\n            var callback = config.linkImgCallback;\n            if (callback && typeof callback === 'function') {\n                callback(link);\n            }\n\n            img = null;\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1024 / 1024;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        if (!customUploadImg) {\n            // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n            if (!uploadImgServer && !uploadImgShowBase64) {\n                return;\n            }\n        }\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n                // val = encodeURIComponent(val)\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgParamsWithUrl) {\n                    if (uploadImgServer.indexOf('?') > 0) {\n                        uploadImgServer += '&';\n                    } else {\n                        uploadImgServer += '?';\n                    }\n                    uploadImgServer = uploadImgServer + key + '=' + val;\n                }\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                var beforeResult = hooks.before(xhr, editor, resultFiles);\n                if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                    if (beforeResult.prevent) {\n                        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                        this._alert(beforeResult.msg);\n                        return;\n                    }\n                }\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\n    编辑器构造函数\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $soundCodeElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n        // 源码编辑区域\n        $soundCodeElem = $('<textarea></textarea>');\n        $soundCodeElem.css('display', 'none').css('width', '100%').css('height', '100%').css('outline', 'none').css('lineHeight', '2.5');\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p class=\"p\"><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n        $textContainerElem.append($soundCodeElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n        $soundCodeElem.addClass('w-e-soundCode');\n\n        // 添加 ID\n        var toolbarElemId = getRandom('toolbar-elem');\n        $toolbarElem.attr('id', toolbarElemId);\n        var textElemId = getRandom('text-elem');\n        $textElem.attr('id', textElemId);\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n        this.$soundCodeElem = $soundCodeElem;\n        this.toolbarElemId = toolbarElemId;\n        this.textElemId = textElemId;\n\n        // 记录输入法的开始和结束\n        var compositionEnd = true;\n        $textContainerElem.on('compositionstart', function () {\n            // 输入法开始输入\n            compositionEnd = false;\n        });\n        $textContainerElem.on('compositionend', function () {\n            // 输入法结束输入\n            compositionEnd = true;\n        });\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            // 输入法结束才出发 onchange\n            compositionEnd && _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n\n        //绑定 onfocus 与 onblur 事件\n        if (config$$1.onfocus || config$$1.onblur) {\n            // 当前编辑器是否是焦点状态\n            this.isFocus = false;\n\n            $(document).on('click', function (e) {\n                //判断当前点击元素是否在编辑器内\n                var isChild = $textElem.isContain($(e.target));\n\n                //判断当前点击元素是否为工具栏\n                var isToolbar = $toolbarElem.isContain($(e.target));\n                var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n                if (!isChild) {\n                    //若为选择工具栏中的功能，则不视为成blur操作\n                    if (isToolbar && !isMenu) {\n                        return;\n                    }\n\n                    if (_this.isFocus) {\n                        _this.onblur && _this.onblur();\n                    }\n                    _this.isFocus = false;\n                } else {\n                    if (!_this.isFocus) {\n                        _this.onfocus && _this.onfocus();\n                    }\n                    _this.isFocus = true;\n                }\n            });\n        }\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p class=\"p\"><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p class=\"p\"><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n\n        // onchange 触发延迟时间\n        var onchangeTimeout = config$$1.onchangeTimeout;\n        onchangeTimeout = parseInt(onchangeTimeout, 10);\n        if (!onchangeTimeout || onchangeTimeout <= 0) {\n            onchangeTimeout = 200;\n        }\n\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    // 需要比较每一个字符\n                    if (currentHtml === beforeChangeHtml) {\n                        return;\n                    }\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, onchangeTimeout);\n            };\n        }\n\n        // -------- 绑定 onblur 事件 --------\n        var onblur = config$$1.onblur;\n        if (onblur && typeof onblur === 'function') {\n            this.onblur = function () {\n                var currentHtml = this.txt.html();\n                onblur(currentHtml);\n            };\n        }\n\n        // -------- 绑定 onfocus 事件 --------\n        var onfocus = config$$1.onfocus;\n        if (onfocus && typeof onfocus === 'function') {\n            this.onfocus = function () {\n                onfocus();\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n        $.offAll();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,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) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n"]}